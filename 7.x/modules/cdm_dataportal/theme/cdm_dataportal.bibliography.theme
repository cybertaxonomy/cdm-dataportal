<?php
/**
 * @file
 * Bibliography Theming functions.
 *
 * @copyright
 *   (C) 2007-2012 EDIT
 *   European Distributed Institute of Taxonomy
 *   http://www.e-taxonomy.eu
 *
 *   The contents of this module are subject to the Mozilla
 *   Public License Version 1.1.
 * @see http://www.mozilla.org/MPL/MPL-1.1.html
 */

/**
 * Returns html for a bibliography.
 *
 * Used in the Palmae portal.
 *
 * @param array $variables
 *   An associative array containing:
 *   - descriptionElementsBibliography: the elements to theme for bibliography.
 *
 * @ingroup themeable
 */
function theme_cdm_descriptionElementBibliography($variables) {
  $descriptionElementsBibliography = $variables['descriptionElementsBibliography'];

  $listOfReferences = array ();
  // $useDescriptions = cdm_ws_get()
  $markerTypes['markerTypes'] = UUID_MARKERTYPE_USE;
  $useDescriptions = cdm_ws_get(CDM_WS_PORTAL_TAXON_DESCRIPTIONS, substr(strrchr($_GET["q"], '/'), 1), queryString($markerTypes));
  // = substr(strrchr($_GET["q"], '/'), 1);
  // $descout = print_r($useDescriptions);
  foreach ($descriptionElementsBibliography as $descriptionElementsBiblio) {
    foreach ($descriptionElementsBiblio as $descriptionElementBiblio) {
      if (isset($descriptionElementBiblio->sources) && is_array($descriptionElementBiblio->sources)) {
        foreach ($descriptionElementBiblio->sources as $source) {
          $isAlreadySelected = FALSE;
          if (empty($listOfReferences)) {
            $listOfReferences[] = $source;
          }
          else {
            foreach ($listOfReferences as $selectedReference) {
              if ($selectedReference->citation->uuid == $source->citation->uuid) {
                $isAlreadySelected = TRUE;
              }
            }
            // Add the source in the list of reference/ This is to remove
            // duplicates from the Bibliography section.
            if (!$isAlreadySelected) {
              $listOfReferences[] = $source;
            }
          }
        }
      }
    }
  }

  if (!empty($useDescriptions) && is_array($useDescriptions)) {
    foreach ($useDescriptions as $useDescription) {
      if (is_array($useDescription->sources)) {
        foreach ($useDescription->sources as $source) {
          $isAlreadySelected = FALSE;
          if (empty($listOfReferences)) {
            $listOfReferences[] = $source;
          }
          else {
            foreach ($listOfReferences as $selectedReference) {
              if ($selectedReference->citation->uuid == $source->citation->uuid) {
                $isAlreadySelected = TRUE;
              }
            }
            if (!$isAlreadySelected) {
              $listOfReferences[] = $source;
            }
          }
        }
      }
    }
  }

  // Call the reference formatting function, it will do the heavy lifting.
  $out = formatReference_for_Bibliography($listOfReferences);
  return $out;
}

/**
 * Formats a reference.
 * Comment @WA @todo use ' instead of " where possible.
 *
 * Used by theme_cdm_descriptionElementBibliography.
 */
function formatReference_for_Bibliography($references) {
  $out = '<div id="block-cdm_dataportal-feature-discussion"><a name="bibliography"> </a><H2>Bibliography</H2><div class="content"> <ul class="description">';
  $outTemp = array ();
  foreach ($references as $reference) {
    $referenceString = '';
    $isAuthorEmpty = false;
    $isTitleEmpty = false;
    $isDateEmpty = false;
    $isPublisherEmpty = false;
    switch ($reference->citation->type) {
      case "Journal":
        $referenceString .= "<li class=\"descriptionText DescriptionElement\">";
        $numberOfTeamMembers = count($reference->citation->authorTeam->teamMembers);
        $currentRecord = 1;
        if (!empty($reference->citation->authorTeam->teamMembers)) {
          foreach ($reference->citation->authorTeam->teamMembers as $teamMember) {
            if (!empty($teamMember->lastname) && !empty($teamMember->firstname)) {
              if ($currentRecord == 1) {
                $referenceString .= $teamMember->lastname . ", " . $teamMember->firstname;
              }
              elseif ($numberOfTeamMembers != $currentRecord) {
                $referenceString .= " , " . $teamMember->lastname . ", " . $teamMember->firstname;
              }
              else {
                $referenceString .= " & " . $teamMember->lastname . ", " . $teamMember->firstname;
                $referenceString .= ((str_endsWith($referenceString, ".") || str_endsWith($referenceString, ". ")) ? ' ' : ". ");
              }
              $currentRecord += 1;
            }
            else {
              if ($numberOfTeamMembers != $currentRecord) {
                $referenceString .= $teamMember->titleCache . " & ";
              }
              else {
                $referenceString .= $teamMember->titleCache;
                $referenceString .= ((str_endsWith($referenceString, ".") || str_endsWith($referenceString, ". ")) ? ' ' : ". ");
              }
              $currentRecord += 1;
            }
          }
        }
        else if (!empty($reference->citation->authorTeam->titleCache) && $reference->citation->authorTeam->titleCache != "-empty team-") {
          $referenceString .= $reference->citation->authorTeam->titleCache;
          $referenceString .= ((str_endsWith($referenceString, ".") || str_endsWith($referenceString, ". ")) ? " " : ". ");
        }
        else {
          $isAuthorEmpty = true;
        }
        /*
        else {
          $referenceString .= $teamMember->lastname . ", " . $teamMember->firstname . " ";
        }
        */
        if (!empty($reference->citation->datePublished->start)) {
          $referenceString .= substr($reference->citation->datePublished->start, 0, 4);
          $referenceString .= ((str_endsWith($referenceString, ".") || str_endsWith($referenceString, ". ")) ? "" : ". ");
        }
        else {
          $isDateEmpty = true;
        }
        if (!empty($reference->citation->title)) {
          $referenceString .= $reference->citation->title;
          $referenceString .= ((str_endsWith($referenceString, ".") || str_endsWith($referenceString, ". ")) ? "" : ". ");
        } else {
          $isTitleEmpty = true;
        }
        if (!empty($reference->citation->publisher)) {
          $referenceString .= $reference->citation->publisher;
          $referenceString .= ((str_endsWith($referenceString, ".") || str_endsWith($referenceString, ". ")) ? "" : ". ");
        } else {
          $isPublisherEmpty = true;
        }
        if($isPublisherEmpty || $isAuthorEmpty || $isDateEmpty || $isTitleEmpty) {
          $referenceString = $reference->citation->titleCache;
        }
 
        $referenceString .= "</li>";
        break;

      case "Article":
        $referenceString .= "<li class=\"descriptionText DescriptionElement\">";
        $stagingReferenceString = "";
        $numberOfTeamMembers = count($reference->citation->authorTeam->teamMembers);
        $currentRecord = 1;
        if (!empty($reference->citation->authorTeam->teamMembers)) {
          foreach ($reference->citation->authorTeam->teamMembers as $teamMember) {
            if (!empty($teamMember->lastname) && !empty($teamMember->firstname)) {
              if ($currentRecord == 1) {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname;
              }
              elseif ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= " , " . $teamMember->lastname . ", " . $teamMember->firstname;
              }
              else {
                $stagingReferenceString .= " & " . $teamMember->lastname . ", " . $teamMember->firstname;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? ' ' : ". ");
              }
              $currentRecord += 1;
            }
            else {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->titleCache. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->titleCache;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? ' ' : ". ");
              }
              $currentRecord += 1;
            }
          }
        }
        else if (!empty($reference->citation->authorTeam->titleCache) && $reference->citation->authorTeam->titleCache != "-empty team-") {
          $stagingReferenceString .= $reference->citation->authorTeam->titleCache;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? " " : ". ");
        }
        else {
           $isAuthorEmpty = true;
        }
        /*
        else {
          $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname . " ";
        }
        */
        if (!empty($reference->citation->datePublished->start)) {
          $stagingReferenceString .= substr($reference->citation->datePublished->start,0,4);
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        }
        else {
          $isDateEmpty = true;
        }
        if (!empty($reference->citation->title)) {
          $stagingReferenceString .= $reference->citation->title;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isTitleEmpty = true;
        }
        if (!empty($reference->citation->publisher)) {
          $stagingReferenceString .= $reference->citation->publisher;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isPublisherEmpty = true;
        }
        if($isPublisherEmpty || $isAuthorEmpty || $isDateEmpty || $isTitleEmpty) {
          $stagingReferenceString = $reference->citation->titleCache;
        }
        $referenceString .= $stagingReferenceString;
        $referenceString .= "</li>";
        break;

      case "Book":
        $referenceString .= "<li class=\"descriptionText DescriptionElement\">";
        $stagingReferenceString = "";
        $numberOfTeamMembers = count($reference->citation->authorTeam->teamMembers);
        $currentRecord = 1;
        if (!empty($reference->citation->authorTeam->teamMembers) && $reference->citation->authorTeam->titleCache != "-empty team-") {
          foreach ($reference->citation->authorTeam->teamMembers as $teamMember) {
            if(!empty($teamMember->lastname) && !empty($teamMember->firstname)) {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
              }
              $currentRecord += 1;
            }
            else {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->titleCache. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->titleCache;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
              }
              $currentRecord += 1;
            }
          }


        }
        else if ($reference->citation->authorTeam->titleCache != "-empty team-"){
          $stagingReferenceString .= $reference->citation->authorTeam->titleCache;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        }
         else {
          $isAuthorEmpty  = true;
         }
        if (!empty($reference->citation->datePublished->start)) {
          $stagingReferenceString .= substr($reference->citation->datePublished->start,0,4);
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        }
        else {
          $isDateEmpty = true;
        }
        if (!empty($reference->citation->title)) {
          $stagingReferenceString .= $reference->citation->title;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        }
        else {
          $isTitleEmpty = true;
        }
        if (!empty($reference->citation->publisher)) {
          $stagingReferenceString .= $reference->citation->publisher;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isPublisherEmpty = true;
        }
        if($isPublisherEmpty || $isAuthorEmpty || $isDateEmpty || $isTitleEmpty) {
          $stagingReferenceString = $reference->citation->titleCache;
        }
        $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        $referenceString .= $stagingReferenceString;
        $referenceString .= "</li>";

        break;
      case "BookSection":
        $referenceString .= "<li class=\"descriptionText DescriptionElement\">";
        $stagingReferenceString = "";
        $numberOfTeamMembers = count($reference->citation->authorTeam->teamMembers);
        $currentRecord = 1;
        if (!empty($reference->citation->authorTeam->teamMembers)) {
          foreach ($reference->citation->authorTeam->teamMembers as $teamMember) {
            if(!empty($teamMember->lastname) && !empty($teamMember->firstname)) {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
              }
              $currentRecord += 1;
            }
            else {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->titleCache. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->titleCache;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
              }
              $currentRecord += 1;
            }
          }
        } else if ($reference->citation->authorTeam->titleCache != "-empty team-") {
          $stagingReferenceString .= $reference->citation->authorTeam->titleCache;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isAuthorEmpty = true;
        }
        if (!empty($reference->citation->inReference->datePublished->start)) {
          $stagingReferenceString .= substr($reference->citation->inReference->datePublished->start,0,4);
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isDateEmpty = true;
        }
        if(!empty($reference->citation->title)) {
          $stagingReferenceString .= $reference->citation->title;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        }
        else {
          $isTitleEmpty = true;
        }
        if(!empty($reference->citation->pages)) {
          $stagingReferenceString .= "Pages ". $reference->citation->pages;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        }
        $stagingReferenceString .= "In ";
        $numberOfTeamMembersInReference = count($reference->citation->inReference->authorTeam->teamMembers);
        $currentRecordinReference = 1;
        if (!empty($reference->citation->inReference->authorTeam->teamMembers)) {
          foreach ($reference->citation->inReference->authorTeam->teamMembers as $teamMember) {
            if(!empty($teamMember->lastname) && !empty($teamMember->firstname)) {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
              }
              $currentRecord += 1;
            }
            else {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->titleCache. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->titleCache;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
              }
              $currentRecord += 1;
            }
          }
        } else if($reference->citation->inReference->authorTeam->teamMembers->titleCache != "-empty team-")  {
          $stagingReferenceString .= $reference->citation->inReference->authorTeam->teamMembers->titleCache;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isAuthorEmpty = true;
        }
        if (!empty($reference->citation->inReference->title)) {
          $stagingReferenceString .=  $reference->citation->inReference->title;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isTitleEmpty = true;
        }
        if(!empty($reference->citation->inReference->publisher)) {
          $stagingReferenceString .= $reference->citation->inReference->placePublished;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");
        } else {
          $isPublisherEmpty = true;
        }
        if ($isPublisherEmpty || $isAuthorEmpty || $isDateEmpty || $isTitleEmpty) {
          $stagingReferenceString = $reference->citation->titleCache;
        }

        $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? "" : ". ");

        $referenceString .= $stagingReferenceString . "</li>";
        break;


      case "WebPage" :
        $referenceString .= "<li class=\"descriptionText DescriptionElement\">" . $reference->citation->titleCache . "</li>";
        break;
      case "Generic" :
        $referenceString .= "<li class=\"descriptionText DescriptionElement\">";
        $stagingReferenceString = "";
        $numberOfTeamMembers = count($reference->citation->authorTeam->teamMembers);
        $currentRecord = 1;
        if (!empty($reference->citation->authorTeam->teamMembers)) {
          foreach ($reference->citation->authorTeam->teamMembers as $teamMember) {
            if(!empty($teamMember->lastname) && !empty($teamMember->firstname)) {
              if ($currentRecord == 1) {
                $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname;
              }
              else if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= " , " . $teamMember->lastname . ", " . $teamMember->firstname;
              }
              else {
                $stagingReferenceString .= " & " . $teamMember->lastname . ", " . $teamMember->firstname;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? ' ' : ". ");
              }
              $currentRecord += 1;
            }
            else {
              if ($numberOfTeamMembers != $currentRecord) {
                $stagingReferenceString .= $teamMember->titleCache. " & ";
              }
              else {
                $stagingReferenceString .= $teamMember->titleCache;
                $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? ' ' : ". ");
              }
              $currentRecord += 1;
            }
          }
        }
        else if(!empty($reference->citation->authorTeam->titleCache)) {
          $stagingReferenceString .= $reference->citation->authorTeam->titleCache;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? " " : ". ");
        }
        else {
          $isAuthorEmpty = true;
        }
        if(!empty($reference->citation->datePublished->start)){
          $stagingReferenceString .= substr($reference->citation->datePublished->start,0,4);
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? " " : ". ");

        } else {
          $isDateEmpty = true;
        }
        if (!empty($reference->citation->title)) {
          $stagingReferenceString .= $reference->citation->title;
          $stagingReferenceString .= ((str_endsWith($out, ".") || str_endsWith($out, ". ")) ? " " : ". ");
        }
        else {
          $isTitleEmpty = true;
        }
        //TODO remove the resolution of the full title cache IF the other elements are empty

        if (!empty($reference->citation->publisher)) {
          $stagingReferenceString .= $reference->citation->publisher;
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? " " : ". ");
        }
        else {
          $isPublisherEmpty = true;
        }

        if ($isAuthorEmpty || $isTitleEmpty || $isDateEmpty || $isPublisherEmpty) {
          $stagingReferenceString = $reference->citation->titleCache;
          $stagingReferenceString .= ((str_endsWith($out, ".") || str_endsWith($out, ". ")) ? " " : ". ");
        }
        /*else {
          $stagingReferenceString .= $teamMember->lastname . ", " . $teamMember->firstname . " ";
        }*/
        /*if (!empty($reference->citation->datePublished->start)) {
          $stagingReferenceString .= substr($reference->citation->datePublished->start,0,4);
          $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? " " : ". ");
        }
        $stagingReferenceString .= $reference->citation->title . ". " . $reference->citation->publisher;
        $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") || str_endsWith($stagingReferenceString, ". ")) ? " " : ". ");*/
        $stagingReferenceString .= ((str_endsWith($stagingReferenceString, ".") ) ? " " : "");
        $referenceString .= $stagingReferenceString;
        $referenceString .= "</li>";
        break;
      default:

        //$author_team = cdm_ws_get(CDM_WS_REFERENCE_AUTHORTEAM, $reference->citation->uuid);

        /*if(!empty($author_team->titleCache)) {
          $referenceString.= print_r($reference->citation);
          $referenceString .= '<li class="descriptionText DescriptionElement">' . "<b>" . $reference->citation->title . ":" . "</b>" . $author_team->titleCache .   '</li>';
        }
        else {
          $referenceString .= '<li class="descriptionText DescriptionElement">' ."<b>" . $reference->citation->titleCache . "</b>" . '</li>';
        }
        if ($referenceCitation){
          $sourceRefs = $referenceCitation;
          //$referenceString .= "[titleccache] " . $descriptionElementBiblio->feature->titleCache . "[/titlecache]";
          //$referenceString .= "[Class] " . $descriptionElementBiblio->class . "[/class]";
          //$referenceString .= "[sourceref]" . $sourceRefs . "[/sourceRef]";
        }*/
        break;
    }
    $outTemp[] = $referenceString;
  }
  sort($outTemp);

  foreach ($outTemp as $refString) {
    $out .= $refString;
  }

  $out .= "</ul></div></div>";
  return $out;
}