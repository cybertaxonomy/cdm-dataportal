<?php

/**
 * Implements hook_menu().
 */
function dwca_export_menu() {

	$items = array();

	$items['admin/config/system/dwca_export/settings'] = array(

		'title' => t('DarwinCore-Archive export'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('dwca_export_config_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_LOCAL_TASK,
		//'file' => 'dwca_export.admin.inc'
	);

	$items['dwca_export'] = array(
		'page callback' => 'dwca_export_deliver_archive',
		'access arguments' => TRUE,
		'type' => MENU_CALLBACK
	);


	return $items;
}

/**
 * Implementation of hook_views_api()
 *
 * drupal will load dwca_export.views_default.inc when this hook is implemented
 */
function dwca_export_views_api() {
	return array(
		'api' => 3.0
	);
}

/**
 * Form function, called by drupal_get_form()
 * in dwca_export_menu().
 */
function dwca_export_config_form($form, &$form_state) {

	$form['dwca_export_todo'] = array(
		'#markup' => '<p>No settings implemented yet...</p>'
	);

	return system_settings_form($form);
}


/**
 * menu callback
 */
function dwca_export_deliver_archive() {

	$tmp_archive_file_name = dwca_export_create_archive( _get_views_map() );

	if($tmp_archive_file_name && file_valid_uri($tmp_archive_file_name)){
		file_transfer($tmp_archive_file_name, array('Content-Type' => 'application/zip'));
	} else {
		throw new Exception(t('Error creating the archive'));
	}
}

/**
 * Walks all view export paths defined in the $views_map.
 * Each file is downloaded to the tmp folder and a zip file
 * is bundeled of the resulting csv files plus the meta file.
 *
 * @param - $views_map maps a view paths to dwca filenames
 *
 * @return the path in the filesystem to the final archive,
 * or FALSE in case of an error.
 */
function dwca_export_create_archive($views_map) {

	$tmp_archive_file_name = drupal_tempnam("temporary://", "dwca_export_");

	// Unfortunately we cannot use drupals ArchiverZip because there Ã­s
	// no way to pass in ZipArchive::CREATE to the constructor to create the archive
	// TODO test if zip functionality is available (i.e. if(function_exists('zip_open'))
	// but I don't know where the proper location for such a check would be
	$zip = new ZipArchive();
	// it is safe to use drupal_realpath as the tmp file will be certainly local
	// and php's ZipArchive does not handle stream URIs
	$result = $zip->open(drupal_realpath($tmp_archive_file_name), ZipArchive::CREATE);

	// there might be a better way to get at this information
	$module_static_dir_absolute = realpath(drupal_get_path('module', 'dwca_export')) . "/static/";

	// at the moment we are using a static meta.xml file
	$metadata = "meta.xml";

	$zip_root_dir = "dwca_export/";

	if ($result !== TRUE) {
		throw new Exception(t('Could not create zip_archive %tmp_archive_file_name', array('%tmp_archive_file_name' => $tmp_archive_file_name)));
	}else{
		// add metadata
		$zip->addFile($module_static_dir_absolute.$metadata, $zip_root_dir.$metadata);
		// add the csv data files
		foreach($views_map as $view => $file){
			$view_temp_file = _create_views_file($view);
			if($view_temp_file){
				$zip->addFile(drupal_realpath($view_temp_file), $zip_root_dir.$file);
			}else{
				throw new Exception(t('Cannot create %file', array('%file' => $file)));
			}
		}
		$zip->close();

		return $tmp_archive_file_name;
	} 
}

/**
 * TODO Downloads the view and returns the filepath
 *
 * @param string $view 
 * @param string $file 
 * @return a filepath to the downloaded view
 * @author Niels Hoffmann
 */
function _create_views_file($view, $file) {
	// FIXME this is a mock
	$view_temp_file = drupal_tempnam("temporary://", "dwca_export_view_");
	return $view_temp_file;
}

/**
 * provides the settings which map a view path to
 * a dwca filename.
 *
 */
function _get_views_map() {

	return array(
		'dwca_export/classification/csv' => 'classification.txt',
		'dwca_export/extension/test/csv' => 'test.txt',
	);
}