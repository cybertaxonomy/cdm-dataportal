<?php
/**
 * @file
 * Provides external links for sources to taxa information.
 *
 * @copyright
 *   (C) 2007-2012 EDIT
 *   European Distributed Institute of Taxonomy
 *   http://www.e-taxonomy.eu
 *
 *   The contents of this module are subject to the Mozilla
 *   Public License Version 1.1.
 * @see http://www.mozilla.org/MPL/MPL-1.1.html
 *
 * @author
 *   - Andreas Kohlbecker <a.kohlbecker@BGBM.org>
 *   - Wouter Addink <w.addink@eti.uva.nl> (migration from Drupal 5 to Drupal7)
 */

/**
 * Display help and module information.
 *
 * @param string $path
 *   For which path of the site we're displaying help.
 * @param array $arg
 *   Array that holds the current path as would be returned from arg() function.
 *
 * @return string
 *   Help text for the path.
 */
function ext_links_help($path, $arg) {
  switch ($path) {
    case 'admin/help#ext_links':
      $output = '<p>' . t("Link to external sources like ## for taxa.") . '</p>';
      return $output;
    case 'admin/config/cdm_dataportal/ext_links':
      $output = '<p>' . t('The external links module allows to configure URL templates for links to external data sources.');
      return $output;
    case 'admin/config/cdm_dataportal/ext_links/%':
      $output = '<p>' . t('An external link template.');
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function ext_links_menu() {
  $items = [];

  $items['admin/config/cdm_dataportal/ext_links'] = [
    'title' => 'External links',
    'description' => 'Configure external links templates.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ext_links_admin_overview'],
    'access arguments' => ['access administration pages'],
    'file' => 'ext_links.admin.inc'
  ];
  $items['admin/config/cdm_dataportal/ext_links/list'] = [
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  ];
  $items['admin/config/cdm_dataportal/ext_links/add'] = [
    'title' => 'Add external link',
    'page callback' => 'ext_links_admin_link_template_page',
    'access arguments' => ['access administration pages'],
    'type' => MENU_LOCAL_ACTION,
    'weight' => 1,
    'file' => 'ext_links.admin.inc',
  ];
  $items['admin/config/cdm_dataportal/ext_links/%ext_links'] = [ // %ext_links refers to ext_links_load
    'title' => 'Edit external link',
    'page callback' => 'ext_links_admin_link_template_page',
    'page arguments' => [4],
    'access arguments' => ['access administration pages'],
    'file' => 'ext_links.admin.inc',
  ];
  $items['admin/config/cdm_dataportal/ext_links/%ext_links/status/%'] = [
    'title' => 'Enable or disable external link',
    'page callback' => 'ext_links_admin_link_template_set_status',
    'page arguments' => [4, 6],
    'access arguments' => ['access administration pages'],
 //   'type' => MENU_CALLBACK,
    'file' => 'ext_links.admin.inc',
  ];
  return $items;
}

/**
 * Retrieves a list of External Link templates, ordered by weight.
 *
 * Empty 'ext_links' tables will be initialized with the default templates.
 *
 * @see ext_links_template_defaults()
 *
 * @return array
 *   An array of external link template objects, keyed by the format ID and ordered by
 *   weight.
 *
 */
function ext_links_templates() {
  global $language;
  $link_templates = &drupal_static(__FUNCTION__, array());

  // cache_clear_all("ext_links_templates:{$language->language}");
  // All available link_templates are cached for performance.
  if (!is_array($link_templates) || !count($link_templates)) {
    if ($cache = cache_get("ext_links:{$language->language}")) {
      $link_templates = $cache->data;
    }
    else {
      $test = false;
      if($test){
        $link_templates = [];
        $link_templates_arrays = ext_links_template_defaults();
        foreach($link_templates_arrays as $a){
          $link_templates[] = (object)$a;
        }
      } else {
        $link_templates = db_select('ext_links', 'elt')
          ->addTag('translatable')
          ->fields('elt')
          ->orderBy('category')
          ->orderBy('weight')
          ->execute()
          ->fetchAllAssoc('id');
      }
      if(!count($link_templates)) {
        $link_templates_arrays = ext_links_template_defaults();
        $query = db_insert('ext_links')
          ->fields(array_keys(array_values($link_templates_arrays)[0]));
        foreach($link_templates_arrays as $a){
          $query->values($a);
        }
        try {
          $query->execute();
        } catch (Exception $e) {
          drupal_set_message("Error while initializing ext_links database: " . $e->getMessage(), "error");
        }
        $link_templates = [];
        foreach($link_templates_arrays as $a){
          $link_templates[] = (object)$a;
        }
      }
      // cache_set("ext_links:{$language->language}", $link_templates);
    }
  }
  return $link_templates;
}

/**
 * Resets the text format caches.
 *
 * @see filter_formats()
 */
function ext_links_templates_reset() {
  cache_clear_all('ext_links', 'cache', TRUE);
  drupal_static_reset('ext_links');
}

/**
 * Loads a text format object from the database.
 *
 * @param $extlink_id
 *   The external link ID. ($link->id)
 *
 * @return
 *   A fully-populated text format object, if the requested format exists and
 *   is enabled. If the format does not exist, or exists in the database but
 *   has been marked as disabled, FALSE is returned.
 *
 * @see ext_links_exists()
 */
function ext_links_load($extlink_id) {
  $test = false;
  if($test) {
    $defaults = ext_links_template_defaults();
    return isset($defaults[$extlink_id]) ? (object)$defaults[$extlink_id] : FALSE;
  }
  else {
   $link_templates = ext_links_templates();
    return isset($link_templates[$extlink_id]) ? $link_templates[$extlink_id] : FALSE;
  }
}

/**
 * Saves a text format object to the database.
 *
 * @param $link_template
 *   A link template object having the properties:
 *   - id: The machine name of the external link. If this corresponds
 *     to an existing external link, this one will be updated;
 *     otherwise, a new external link will be created.
 *   - title: The link title
 *   - link: The link url template.
 *   - glue: The string to concatenate name parts in the URL query string.
 *   - status: (optional) An integer indicating whether the ext link is
 *     enabled (1) or not (0). Defaults to 1.
 *   - weight: (optional) The weight of the external link, which controls its
 *     placement in external link block. If omitted, the weight is set to 0.
 *     Defaults to NULL.
 *
 * @return
 *   SAVED_NEW or SAVED_UPDATED.
 */
function ext_links_save($link_template) {

  $link_template->title = trim($link_template->title);
  $link_template->cache = true;
  if (!isset($link_template->status)) {
    $link_template->status = 1;
  }
  if (!isset($link_template->weight)) {
    $link_template->weight = 0;
  }

  // Insert or update the text format.
  $return = db_merge('ext_links')
    ->key(array('id' => $link_template->id))
    ->fields(array(
      'id' => $link_template->id,
      'title' => $link_template->title,
      'link' => $link_template->link,
      'glue' => $link_template->glue,
      'status' => (int) $link_template->status,
      'weight' => (int) $link_template->weight,
    ))
    ->execute();

  ext_links_templates_reset();
  return $return;
}

/**
 * Determines if a external link exists.
 *
 * @param $ext_link_name
 *   The ID of the external link to check.
 *
 * @return
 *   TRUE if the external link exists, FALSE otherwise.
 *
 * @see ext_links_load()
 */
function ext_links_exists($ext_link_name) {
  return (bool) db_query_range('SELECT 1 FROM {ext_links} WHERE name = :name', 0, 1, array(':name' => $ext_link_name))->fetchField();
}


/**
 * Returns the genus and the first epithet from the object taxon.
 *
 * @param $taxon
 *   A CDM Taxon instance object
 * @return array
 *  An associate array with two elements:
 *     - genus: the uninomial
 *     - species: the species epithet
 */
function ext_link_species_name($taxon) {
  $speciesName = array();
  $i = 0;
  while (isset($taxon->name->taggedName[$i]) && !isset($speciesName['species'])) {
    if ($taxon->name->taggedName[$i]->type == "name") {
      if (!isset($speciesName['genus'])) {
        $speciesName['genus'] = $taxon->name->taggedName[$i]->text;
      }
      else {
        $speciesName['species'] = $taxon->name->taggedName[$i]->text;
      }
    }
    $i++;
  }
  return $speciesName;
}

/**
 * Implements hook_block_info().
 */
function ext_links_block_info() {
  if (TRUE) {
    $block[0]["info"] = t("External Taxon Links");
    return $block;
  }
}

/**
 * Implements hook_block_view().
 */
function ext_links_block_view($delta) {
  // TODO Rename block deltas (e.g. '0') to readable strings.
  switch ($delta) {
    case '0':
      $block['subject'] = 'External links';

      $uuid = get_current_taxon_uuid();
      if ($uuid) {
        $taxon = cdm_ws_get(CDM_WS_PORTAL_TAXON, $uuid);

        // $taxon->titleCache;
        // var_export()
        if (!empty($taxon)) {
          drupal_add_js(drupal_get_path('module', 'ext_links') . '/ext_links.js');
          $speciesName = ext_link_species_name($taxon);

          $genus = $taxon->name->taggedName[0]->text;
          $species = null;
          if(isset($taxon->name->taggedName[1])){
            $species = $taxon->name->taggedName[1]->text;
          }
          $block_content = '';
          $listOption = variable_get("ext_links_options", 0);
          if (isset($listOption)) {
            $block['content'] = theme('ext_links_list_grouped', array('speciesName' => $speciesName, 'genus' => $genus, 'species' => $species));
          }
          else {
            $block['content'] = theme('ext_links_list_plain', array('speciesName' => $speciesName, 'genus' => $genus, 'species' => $species ));
          }

          // if(variable_get('ext_links_gbif_check', TRUE)) {
          // $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_gbif_link', $ext_links_default[gbif][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_gbif_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_gbif_text', $ext_links_default[gbif][text_default_value]).'</a><br />';
          /*
           $block_content .=
           /* TODO
           Please manually fix the parameters on the l() or url() function on the next line.
           Typically, this was not changed because of a function call inside an array call like
           array('title' => t('View user profile.')).
           l(variable_get('ext_links_gbif_text', $ext_links_default[gbif][text_default_value]),
           'JavaScript:popupExternalLinks('.variable_get('ext_links_gbif_link', $ext_links_default[gbif][link_default_value]).$speciesName[genus].variable_get('ext_links_gbif_concat', ' ').$speciesName[species],
           array(), null, null, true);
           */
          /*}
           if(variable_get('ext_links_biocase_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_biocase_link', $ext_links_default[biocase][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_biocase_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_biocase_text', $ext_links_default[biocase][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_nybg_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_nybg_link', $ext_links_default[nybg][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_nybg_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_nybg_text', $ext_links_default[nybg][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_tropicos_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_tropicos_link', $ext_links_default[tropicos][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_tropicos_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_tropicos_text', $ext_links_default[tropicos][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_ncbi_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_ncbi_link', $ext_links_default[ncbi][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_ncbi_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_ncbi_text', $ext_links_default[ncbi][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_google_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_google_link', $ext_links_default[google][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_google_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_google_text', $ext_links_default[google][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_flickr_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_flickr_link', $ext_links_default[flickr][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_flickr_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_flickr_text', $ext_links_default[flickr][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_scholar_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_scholar_link', $ext_links_default[scholar][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_scholar_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_scholar_text', $ext_links_default[scholar][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_bhl_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_bhl_link', $ext_links_default[bhl][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_bhl_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_bhl_text', $ext_links_default[bhl][text_default_value]).'</a><br />';
           }

           $block['content'] = $block_content;
           $block['content'] = theme('ext_links_list_plain');

           }

           }*/
          // if taxon
        }
      }
      // If path.
      return $block;
  } /* switch */

}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function theme_ext_links_list_grouped($variables) {
  // comment @WA: perhaps this function could be merged with ext_list_plain
  // into one function?
  $speciesName = $variables['speciesName'];
  if(!isset($speciesName['genus'])) {
    $speciesName['genus'] = '';
  }
  if(!isset($speciesName['species'])) {
    $speciesName['species'] = '';
  }
  $genus = $variables['genus'];
  $species = $variables['species'];
  $block_content = '';
  $categories = NULL;
  $ext_links_default = ext_links_templates();


  /*
  foreach ($ext_links_default as $ext_link) {

   //$block_content .= $ext_link['ext_links_bhl_category'];
   $category[] = variable_get('ext_links_bhl_category', $ext_links_default[][text_default_value]);
   $block_content .= variable_get('ext_links_bhl_category', $ext_links_default[][text_default_value]);
   }
   */

  // Images section.
  if (variable_get('ext_links_google_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_google_category', $ext_links_default['google']['category_default_value']);
    $categories['google']['title'] = variable_get('ext_links_google_category', $ext_links_default['google']['category_default_value']);
    $categories['google']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_google_link', $ext_links_default['google']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_google_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_google_text', $ext_links_default['google']['text_default_value']) . '</a><br />';

  }
  if (variable_get('ext_links_flickr_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_flickr_category', $ext_links_default['flickr']['category_default_value']);
    $categories['flickr']['title'] = variable_get('ext_links_flickr_category', $ext_links_default['flickr']['category_default_value']);
    $categories['flickr']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_flickr_link', $ext_links_default['flickr']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_flickr_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_flickr_text', $ext_links_default['flickr']['text_default_value']) . '</a><br />';
  }

  // Specimen/occurences section.
  if (variable_get('ext_links_gbif_check', TRUE)) {
    $categoryTitles[] = variable_get('ext_links_gbif_category', $ext_links_default['gbif']['category_default_value']);
    $categories['gbif']['title'] = variable_get('ext_links_gbif_category', $ext_links_default['gbif']['category_default_value']);
    $categories['gbif']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_gbif_link', $ext_links_default['gbif']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_gbif_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_gbif_text', $ext_links_default['gbif']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_biocase_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_biocase_category', $ext_links_default['biocase']['category_default_value']);
    $categories['biocase']['title'] = variable_get('ext_links_biocase_category', $ext_links_default['biocase']['category_default_value']);
    $categories['biocase']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_biocase_link', $ext_links_default['biocase']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_biocase_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_biocase_text', $ext_links_default['biocase']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_nybg_check', 1)) {
    $query = '';
    $genusQuery = '';
    $speciesQuery = '';
    if ($speciesName['genus'] != NULL) {
      $query .= 'DetFiledAsGenusLocal+%3D+\%27'. $speciesName['genus']. '\%27';
    }
    if ($speciesName['species'] != NULL) {
      $query .= variable_get('ext_links_nybg_concat', '+AND+'). 'DetFiledAsSpeciesLocal+%3D+\%27'. $speciesName['species'] . '\%27';
    }
    $categoryTitles[] = variable_get('ext_links_nybg_category', $ext_links_default['nybg']['category_default_value']);
    $categories['nybg']['title'] = variable_get('ext_links_nybg_category', $ext_links_default['nybg']['category_default_value']);
    $categories['nybg']['content'] = '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_nybg_link', $ext_links_default['nybg']['link_default_value']).$query.'\')">'.variable_get('ext_links_nybg_text', $ext_links_default['nybg']['text_default_value']).'</a><br />';
  }
  if (variable_get('ext_links_tropicos_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_tropicos_category', $ext_links_default['tropicos']['category_default_value']);
    $categories['tropicos']['title'] = variable_get('ext_links_tropicos_category', $ext_links_default['tropicos']['category_default_value']);
    $categories['tropicos']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tropicos_link', $ext_links_default['tropicos']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tropicos_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tropicos_text', $ext_links_default['tropicos']['text_default_value']) . '</a><br />';
  }

  // Literature.
  if (variable_get('ext_links_scholar_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_scholar_category', $ext_links_default['scholar']['category_default_value']);
    $categories['scholar']['title'] = variable_get('ext_links_scholar_category', $ext_links_default['scholar']['category_default_value']);
    $categories['scholar']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_scholar_link', $ext_links_default['scholar']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_scholar_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_scholar_text', $ext_links_default['scholar']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_bhl_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_bhl_category', $ext_links_default['bhl']['category_default_value']);
    $categories['bhl']['title'] = variable_get('ext_links_bhl_category', $ext_links_default['bhl']['category_default_value']);
    $categories['bhl']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_bhl_link', $ext_links_default['bhl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_bhl_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_bhl_text', $ext_links_default['bhl']['text_default_value']) . '</a><br />';
  }

  // Molecular resources.
  if (variable_get('ext_links_ncbi_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_ncbi_category', $ext_links_default['ncbi']['category_default_value']);
    $categories['ncbi']['title'] = variable_get('ext_links_ncbi_category', $ext_links_default['ncbi']['category_default_value']);
    $categories['ncbi']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ncbi_link', $ext_links_default['ncbi']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_ncbi_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_ncbi_text', $ext_links_default['ncbi']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_arkive_check', 1)) {
    $postURL = '&output=xml_no_dtd&client=arkive-images&site=arkive-images&ie=utf8&oe=utf8&num=20&proxystylesheet=tng-search&filter=0&getfields=*';
    $categoryTitles[] = variable_get('ext_links_arkive_category', $ext_links_default['arkive']['category_default_value']);
    $categories['arkive']['title'] = variable_get('ext_links_arkive_category', $ext_links_default['arkive']['category_default_value']);
    $categories['arkive']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_arkive_link', $ext_links_default['arkive']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_arkive_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_arkive_text', $ext_links_default['arkive']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_herbcat_check', 1)) {
    $postURL = '&x=11&y=13&homePageSearchOption=scientific_name&nameOfSearchPage=home_page';
    $categoryTitles[] = variable_get('ext_links_herbcat_category', $ext_links_default['herbcat']['category_default_value']);
    $categories['herbcat']['title'] = variable_get('ext_links_herbcat_category', $ext_links_default['herbcat']['category_default_value']);
    $categories['herbcat']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_herbcat_link', $ext_links_default['herbcat']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_herbcat_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_herbcat_text', $ext_links_default['herbcat']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_iucn_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_iucn_category', $ext_links_default['iucn']['category_default_value']);
    $categories['iucn']['title'] = variable_get('ext_links_iucn_category', $ext_links_default['iucn']['category_default_value']);
    $categories['iucn']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_iucn_link', $ext_links_default['iucn']['link_default_value']) . '\')">' . variable_get('ext_links_iucn_text', $ext_links_default['iucn']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_ipni_check', 1)) {
    $genusQuery = 'find_genus=' . $speciesName['genus'];
    $speciesQuery = 'find_species=' . $speciesName['species'];
    $categoryTitles[] = variable_get('ext_links_ipni_category', $ext_links_default['ipni']['category_default_value']);
    $categories['ipni']['title'] = variable_get('ext_links_ipni_category', $ext_links_default['ipni']['category_default_value']);
    $categories['ipni']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ipni_link', $ext_links_default['ipni']['link_default_value']) . $genusQuery . variable_get('ext_links_ipni_concat', '&') . $speciesQuery . '\')">' . variable_get('ext_links_ipni_text', $ext_links_default['ipni']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_wcsp_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_wcsp_category', $ext_links_default['wcsp']['category_default_value']);
    $categories['wcsp']['title'] = variable_get('ext_links_wcsp_category', $ext_links_default['wcsp']['category_default_value']);
    $categories['wcsp']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_wcsp_link', $ext_links_default['wcsp']['link_default_value']) . '\')">' . variable_get('ext_links_wcsp_text', $ext_links_default['wcsp']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_tpl_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_tpl_category', $ext_links_default['tpl']['category_default_value']);
    $categories['tpl']['title'] = variable_get('ext_links_tpl_category', $ext_links_default['tpl']['category_default_value']);
    $categories['tpl']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tpl_link', $ext_links_default['tpl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tpl_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tpl_text', $ext_links_default['tpl']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_eol_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_eol_category', $ext_links_default['eol']['category_default_value']);
    $categories['eol']['title'] = variable_get('ext_links_eol_category', $ext_links_default['eol']['category_default_value']);
    $categories['eol']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_eol_link', $ext_links_default['eol']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_eol_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_eol_text', $ext_links_default['eol']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_jstor_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_jstor_category', $ext_links_default['jstor']['category_default_value']);
    $categories['jstor']['title'] = variable_get('ext_links_jstor_category', $ext_links_default['jstor']['category_default_value']);
    $categories['jstor']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_jstor_link', $ext_links_default['jstor']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_jstor_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_jstor_text', $ext_links_default['jstor']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_epic_check', 1)) {
    $postURL = '&searchAll=true&categories=names&categories=bibl&categories=colln&categories=taxon&categories=flora&Submit.x=0&Submit.y=0';
    $categoryTitles[] = variable_get('ext_links_epic_category', $ext_links_default['epic']['category_default_value']);
    $categories['epic']['title'] = variable_get('ext_links_epic_category', $ext_links_default['epic']['category_default_value']);
    $categories['epic']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_epic_link', $ext_links_default['epic']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_epic_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_epic_text', $ext_links_default['epic']['text_default_value']) . '</a><br />';
  }
//  if (variable_get('ext_links_fairchild_check', 1)) {
//    $categoryTitles[] = variable_get('ext_links_fairchild_category', $ext_links_default['fairchild']['category_default_value']);
//    $categories['fairchild']['title'] = variable_get('ext_links_fairchild_category', $ext_links_default['fairchild']['category_default_value']);
//    $categories['fairchild']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_fairchild_link', $ext_links_default['fairchild']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_fairchild_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_fairchild_text', $ext_links_default['fairchild']['text_default_value']) . '</a><br />';
//  }
  if (variable_get('ext_links_ggbn_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_ggbn_category', $ext_links_default['ggbn']['category_default_value']);
    $categories['ggbn']['title'] = variable_get('ext_links_ggnb_category', $ext_links_default['ggbn']['category_default_value']);
    $categories['ggbn']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ggbn_link', $ext_links_default['ggbn']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_ggbn_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_ggbn_text', $ext_links_default['ggbn']['text_default_value']) . '</a><br />';
  }

  $categoryTitles = array_unique($categoryTitles);
  foreach ($categoryTitles as $categoryTitle) {
    // $block_content .= "specName" . $speciesName;
    $block_content .= "<div class=\"category\"><h5>" . $categoryTitle . "</h5>";
    foreach ($categories as $category) {
      if ($category['title'] == $categoryTitle) {
        $block_content .= $category['content'];
      }
    }
    $block_content .= "</div>";
  }


  return $block_content;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function theme_ext_links_list_plain($variables) {
  $speciesName = $variables['speciesName'];
  if (!isset($speciesName['genus'])) {
    $speciesName['genus'] = '';
  }
  if (!isset($speciesName['species'])) {
    $speciesName['species'] = '';
  }
  $genus = $variables['genus'];
  $species = $variables['species'];
  $ext_links_default = ext_links_get_default();
  $block_content = '';
  if (variable_get('ext_links_gbif_check', TRUE)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_gbif_link', $ext_links_default['gbif']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_gbif_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_gbif_text', $ext_links_default['gbif']['text_default_value']) . '</a><br />';
    /*
     $block_content .= /* TODO
     Please manually fix the parameters on the l() or url() function on the next line.
     Typically, this was not changed because of a function call inside an array call like
     array('title' => t('View user profile.')).*/
    /*
     l(variable_get('ext_links_gbif_text', $ext_links_default[gbif][text_default_value]),
     'JavaScript:popupExternalLinks('.variable_get('ext_links_gbif_link', $ext_links_default[gbif][link_default_value]).$speciesName[genus].variable_get('ext_links_gbif_concat', ' ').$speciesName[species],
     array(), null, null, true);
     */
  }
  if (variable_get('ext_links_biocase_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_biocase_link', $ext_links_default['biocase']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_biocase_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_biocase_text', $ext_links_default['biocase']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_nybg_check', 1)) {
    // $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_nybg_link', $ext_links_default[nybg][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_nybg_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_nybg_text', $ext_links_default[nybg][text_default_value]).'</a><br />';
    $genusQuery = '';
    $speciesQuery = '';
    if ($speciesName['genus'] != NULL) {
      $genusQuery = 'DetFiledAsGenusLocal+%3D+\%27' . $speciesName['genus'] . '\%27';
    }
    if ($speciesName['species'] != NULL) {
      $speciesQuery = 'DetFiledAsSpeciesLocal+%3D+\%27' . $speciesName['species'] . '\%27';
    }
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_nybg_link', $ext_links_default['nybg']['link_default_value']) . $genusQuery . variable_get('ext_links_nybg_concat', '+AND+') . $speciesQuery . '\')">' . variable_get('ext_links_nybg_text', $ext_links_default['nybg']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_tropicos_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tropicos_link', $ext_links_default['tropicos']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tropicos_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tropicos_text', $ext_links_default['tropicos']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_ncbi_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ncbi_link', $ext_links_default['ncbi']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_ncbi_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_ncbi_text', $ext_links_default['ncbi']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_google_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_google_link', $ext_links_default['google']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_google_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_google_text', $ext_links_default['google']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_flickr_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_flickr_link', $ext_links_default['flickr']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_flickr_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_flickr_text', $ext_links_default['flickr']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_scholar_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_scholar_link', $ext_links_default['scholar']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_scholar_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_scholar_text', $ext_links_default['scholar']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_bhl_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_bhl_link', $ext_links_default['bhl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_bhl_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_bhl_text', $ext_links_default['bhl']['text_default_value']) . '</a><br />';
  }
//  if (variable_get('ext_links_fairchild_check', 1)) {
//    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_fairchild_link', $ext_links_default['fairchild']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_fairchild_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_fairchild_text', $ext_links_default['fairchild']['text_default_value']) . '</a><br />';
//  }
  if (variable_get('ext_links_ggbn_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ggbn_link', $ext_links_default['ggbn']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_ggbn_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_ggbn_text', $ext_links_default['ggbn']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_arkive_check', 1)) {
    $postURL = '&output=xml_no_dtd&client=arkive-images&site=arkive-images&ie=utf8&oe=utf8&num=20&proxystylesheet=tng-search&filter=0&getfields=*';
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_arkive_link', $ext_links_default['arkive']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_arkive_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_arkive_text', $ext_links_default['arkive']['text_default_value']) . '</a><br />';
  }

  //--------------------
  $ext_link_id = 'herbcat';
  if (variable_get("ext_links_${ext_link_id}_check", 1)) {
    $postURL = '&x=11&y=13&homePageSearchOption=scientific_name&nameOfSearchPage=home_page';
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' .
      variable_get("ext_links_${ext_link_id}_link", $ext_links_default[$ext_link_id]['link_default_value']) .
      str_replace('"', '%22', $speciesName['genus']) .
      variable_get("ext_links_${ext_link_id}_concat", '+') .
      str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' .
      variable_get("ext_links_${ext_link_id}_text", $ext_links_default[$ext_link_id]['text_default_value']) .
      '</a><br />';
  }
  //--------------------
  if (variable_get('ext_links_iucn_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_iucn_link', $ext_links_default['iucn']['link_default_value']) . '\')">' . variable_get('ext_links_iucn_text', $ext_links_default['iucn']['text_default_value']) . '</a><br />';

  }
  if (variable_get('ext_links_ipni_check', 1)) {
    $genusQuery = 'find_genus=' . $speciesName['genus'];
    $speciesQuery = 'find_species=' . $speciesName['species'];
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ipni_link', $ext_links_default['ipni']['link_default_value']) . $genusQuery . variable_get('ext_links_ipni_concat', '&') . $speciesQuery . '\')">' . variable_get('ext_links_ipni_text', $ext_links_default['ipni']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_wcsp_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_wcsp_link', $ext_links_default['wcsp']['link_default_value']) . '\')">' . variable_get('ext_links_wcsp_text', $ext_links_default['wcsp']['text_default_value']) . '</a><br />';

  }
  if (variable_get('ext_links_tpl_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tpl_link', $ext_links_default['tpl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tpl_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tpl_text', $ext_links_default['tpl']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_eol_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_eol_link', $ext_links_default['eol']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_eol_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_eol_text', $ext_links_default['eol']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_jstor_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_jstor_link', $ext_links_default['jstor']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_jstor_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_jstor_text', $ext_links_default['jstor']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_epic_check', 1)) {
    $postURL = '&searchAll=true&categories=names&categories=bibl&categories=colln&categories=taxon&categories=flora&Submit.x=0&Submit.y=0';
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_epic_link', $ext_links_default['epic']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_epic_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_epic_text', $ext_links_default['epic']['text_default_value']) . '</a><br />';
  }

  return $block_content;
}

// Include the admin form if we really want it to use.
/*
if (arg(0) === 'admin' AND arg(1) === 'user' AND arg(2) === 'ext_link') {
  module_load_include('inc', 'ext_links', 'xt_link_admin');
}
*/

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function ext_links_theme() {
  return array(
    'ext_links_list_grouped' => array('variables' => array(
      'speciesName' => NULL,
      'genus' => NULL,
      'species' => NULL,
      )),
    'ext_links_list_plain' => array('variables' => array(
      'speciesName' => NULL,
      'genus' => NULL,
      'species' => NULL,
      )),
    // theme_ext_links_admin_overview
    'ext_links_admin_overview' => array(
      'render element' => 'form',
      'file' => 'ext_links.admin.inc',
    ),
//    'ext_links_link_template_filter_order' => array(
//      'render element' => 'element',
//      'file' => 'ext_links.admin.inc',
//    ),
  );
}

/**
 * Get the default external links.
 *
 * @return array
 *   Returns an array with default external links values.
 */
function ext_links_template_defaults() {
  $ext_links_default["gbif"] = array(
    'id' => "gbif",
    'link' => 'http://www.gbif.org/species/search?q=',
    'title' => 'Search GBIF...',
    'glue' => ' ',
    'weight' => 0,
    'status' => 1,
    'category' => 'Specimens/Occurrences',
  );
  $ext_links_default["biocase"] = array(
    'id' => "biocase",
    'link' => 'http://search.biocase.org/edit/search/units/simpleSearch/query1?unitName=',
    'title' => 'Search BioCASE...',
    'glue' => ' ',
    'weight' => 0,
    'status' => 1,
    'category' => 'Specimens/Occurrences',
  );
  $ext_links_default["nybg"] = array(
    'id' => "nybg",
    'link' => 'http://sweetgum.nybg.org/science/vh/specimen_list.php?SummaryData=',
    'title' => 'Search NYBG...',
    'glue' => '+AND+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Specimens/Occurrences',
  );
  $ext_links_default["tropicos"] = array(
    'id' => "tropicos",
    'link' => 'http://www.tropicos.org/NameSearch.aspx?name=',
    'title' => 'Search Tropicos...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Specimens/Occurrences',
  );
  $ext_links_default["ncbi"] = array(
    'id' => "ncbi",
    'link' => 'http://www.ncbi.nlm.nih.gov/gquery/gquery.fcgi?term=',
    'title' => 'Search NCBI...',
    'glue' => '+AND+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Molecular Resources',
  );
  $ext_links_default["google"] = array(
    'id' => "google",
    'link' => 'http://images.google.com/images?q=',
    'title' => 'Search Google Images...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Images',
  );
  $ext_links_default["flickr"] = array(
    'id' => "flickr",
    'link' => 'http://www.flickr.com/search/?w=all&q=',
    'title' => 'Search flickr...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Images',
  );
  $ext_links_default["scholar"] = array(
    'id' => "scholar",
    'link' => 'http://scholar.google.de/scholar?hl=de&btnG=Suche&lr=&as_ylo=&as_vis=0&q=',
    'title' => 'Search Google scholar...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Literature',
  );
  $ext_links_default["bhl"] = array(
    'id' => "bhl",
    'link' => 'http://www.biodiversitylibrary.org/Search.aspx?searchCat=&searchTerm=',
    'title' => 'Search BHL...',
    'glue' => ' ',
    'weight' => 0,
    'status' => 1,
    'category' => 'Literature',
  );
  $ext_links_default["arkive"] = array(
    'id' => "arkive",
    'link' => 'http://www.arkive.org/search.html?q=',
    'title' => 'Search ARKive...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Images',
  );
  $ext_links_default["herbcat"] = array(
    'id' => "herbcat",
    'link' => 'http://apps.kew.org/herbcat/getHomePageResults.do?homePageSearchText=',
    'title' => 'Search Kew Herbarium Catalogue...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Specimens/Occurrences',
  );
  $ext_links_default["iucn"] = array(
    'id' => "iucn",
    'link' => 'http://www.iucnredlist.org/',
    'title' => 'Go to IUCN Red List...',
    'glue' => ' ',
    'weight' => 0,
    'status' => 1,
    'category' => 'Conservation',
  );
  $ext_links_default["ipni"] = array(
    'id' => "ipni",
    'link' => 'http://www.ipni.org/ipni/advPlantNameSearch.do?',
    'title' => 'Search IPNI...',
    'glue' => '&',
    'weight' => 0,
    'status' => 1,
    'category' => 'Classification',
  );
  $ext_links_default["wcsp"] = array(
    'id' => "wcsp",
    'link' => 'http://wcsp.science.kew.org/qsearch.do?plantName=',
    'title' => 'Search World Checklist Monocots...',
    'glue' => ' ',
    'weight' => 0,
    'status' => 1,
    'category' => 'Classification',
  );
  $ext_links_default["tpl"] = array(
    'id' => "tpl",
    'link' => 'http://www.theplantlist.org/tpl/search?q=',
    'title' => 'Search The Plant List...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Classification',
  );
  $ext_links_default["eol"] = array(
    'id' => "eol",
    'link' => 'http://eol.org/search/?q=',
    'title' => 'Search Encyclopaedia of Life...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'General',
  );
  $ext_links_default["jstor"] = array(
    'id' => "jstor",
    'link' => 'https://plants.jstor.org/search?filter=name&so=ps_group_by_genus_species+asc&Query=',
    'title' => 'Search JSTOR Plant Science...',
    'glue' => ' ',
    'weight' => 0,
    'status' => 1,
    'category' => 'General',
  );
  $ext_links_default["epic"] = array(
    'id' => "epic",
    'link' => 'http://epic.kew.org/searchepic/summaryquery.do?scientificName=',
    'title' => 'Search ePIC...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'General',
  );
  $ext_links_default["fairchild"] = array(
    'id' => "fairchild",
    'link' => 'http://palmguide.org/palmsearch.php?query=',
    'title' => 'Search Fairchild Guide To Palms...',
    'glue' => '+',
    'weight' => 0,
    'status' => 0, //disabled since Fairchild Guide To Palms seems to be down
    'category' => 'Specimens/Occurrences',
  );
  $ext_links_default["ggbn"] = array(
    'id' => "ggbn",
    'link' => 'http://www.ggbn.org/ggbn_portal/search/result?fullScientificName=',
    'title' => 'Search GGBN...',
    'glue' => '+',
    'weight' => 0,
    'status' => 1,
    'category' => 'Molecular Resources',
  );
  return $ext_links_default;
}
