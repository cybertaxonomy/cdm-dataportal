<?php
/**
 * @file
 * Provides external links for sources to taxa information.
 *
 * @copyright
 *   (C) 2007-2012 EDIT
 *   European Distributed Institute of Taxonomy
 *   http://www.e-taxonomy.eu
 *
 *   The contents of this module are subject to the Mozilla
 *   Public License Version 1.1.
 * @see http://www.mozilla.org/MPL/MPL-1.1.html
 *
 * @author
 *   - Andreas Kohlbecker <a.kohlbecker@BGBM.org>
 *   - Wouter Addink <w.addink@eti.uva.nl> (migration from Drupal 5 to Drupal7)
 */

/**
 * Display help and module information.
 *
 * @param string $path
 *   For which path of the site we're displaying help.
 * @param array $arg
 *   Array that holds the current path as would be returned from arg() function.
 *
 * @return string
 *   Help text for the path.
 */
function ext_links_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/help#ext_links':
      // TODO.
      $output = '<p>' . t("Link to external sources like ## for taxa.") . '</p>';
      break;
  }
  return $output;
} // function ext_links_help

/**
 * Generate the HTML text for the ext_link login block.
 */
function ext_links_admin($form, &$form_state) {
  // Default values for the external links.
  $ext_links_default = ext_links_get_default();

  $ext_links[0] = array(
    'form' => 'gbif',
    'form_title' => 'GBIF',
    'check_title' => 'GBIF',
    'link_title' => 'GBIF link',
    'link_description' => 'The link to GBIF without the taxon name.',
    'concat_default_value' => ' ',
    'text_title' => 'GBIF text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[1] = array(
    'form' => 'biocase',
    'form_title' => 'BioCASE',
    'check_title' => 'Display BioCASE link?',
    'link_title' => 'BioCASE link',
    'link_description' => 'The link to BioCASE without the taxon name.',
    'concat_default_value' => ' ',
    'text_title' => 'BioCASE text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[2] = array(
    'form' => 'nybg',
    'form_title' => 'The New York Botanical Garden',
    'check_title' => 'Display NYBG link?',
    'link_title' => 'NYBG link',
    'link_description' => 'The link to NCBI without the taxon name.',
    'concat_default_value' => '+AND+',
    'text_title' => 'NYBG text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[3] = array(
    'form' => 'tropicos',
    'form_title' => 'Tropicos',
    'check_title' => 'Display Tropicos link?',
    'link_title' => 'Tropicos link',
    'link_description' => 'The link to Tropicos without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'Tropicos text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[4] = array(
    'form' => 'ncbi',
    'form_title' => 'NCBI',
    'check_title' => 'Display NCBI link?',
    'link_title' => 'NCBI link',
    'link_description' => 'The link to NCBI without the taxon name.',
    'concat_default_value' => '+AND+',
    'text_title' => 'NCBI text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[5] = array(
    'form' => 'google',
    'form_title' => 'Google Images',
    'check_title' => 'Display Google Images link?',
    'link_title' => 'Google Images link',
    'link_description' => 'The link to Google Images without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'Google Images text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[6] = array(
    'form' => 'flickr',
    'form_title' => 'flickr',
    'check_title' => 'Display flickr link?',
    'link_title' => 'flickr link',
    'link_description' => 'The link to flickr without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'flickr text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[7] = array(
    'form' => 'scholar',
    'form_title' => 'Google scholar',
    'check_title' => 'Display Google scholar link?',
    'link_title' => 'Google scholar link',
    'link_description' => 'The link to Google scholar without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'Google scholar text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[8] = array(
    'form' => 'bhl',
    'form_title' => 'Biodiversity Heritage Library (BHL)',
    'check_title' => 'Display BHL link?',
    'link_title' => 'BHL link',
    'link_description' => 'The link to BHL without the taxon name.',
    'concat_default_value' => ' ',
    'text_title' => 'BHL text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[9] = array(
    'form' => 'arkive',
    'form_title' => 'ARKive',
    'check_title' => 'Display ARKive link?',
    'link_title' => 'ARKive link',
    'link_description' => 'The link to ARKive without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'ARKive text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[10] = array(
    'form' => 'herbcat',
    'form_title' => 'Kew Herbarium Catalogue',
    'check_title' => 'Display Kew Herbarium Catalogue link?',
    'link_title' => 'Kew Herbarium Catalogue link',
    'link_description' => 'The link to Kew Herbarium Catalogue without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'Kew Herbarium Catalogue text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[11] = array(
    'form' => 'iucn',
    'form_title' => 'IUCN Red List',
    'check_title' => 'Display IUCN Red List link?',
    'link_title' => 'IUCN Red List link',
    'link_description' => 'The link to IUCN Red List without the taxon name.',
    'concat_default_value' => ' ',
    'text_title' => 'IUCN Red List text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[12] = array(
    'form' => 'ipni',
    'form_title' => 'IPNI',
    'check_title' => 'Display IPNI link?',
    'link_title' => 'IPNI link',
    'link_description' => 'The link to IPNI without the taxon name.',
    'concat_default_value' => '&',
    'text_title' => 'IPNI text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[13] = array(
    'form' => 'wcsp',
    'form_title' => 'World Checklist of Monocots',
    'check_title' => 'Display World Checklist of Monocots link?',
    'link_title' => 'World Checklist of Monocots link',
    'link_description' => 'The link to World Checklist of Monocots without the taxon name.',
    'concat_default_value' => ' ',
    'text_title' => 'World Checklist of Monocots text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[14] = array(
    'form' => 'tpl',
    'form_title' => 'The Plant List',
    'check_title' => 'Display The Plant List link?',
    'link_title' => 'The Plant List link',
    'link_description' => 'The link to The Plant List without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'The Plant List text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[15] = array(
    'form' => 'eol',
    'form_title' => 'Encyclopaedia of Life',
    'check_title' => 'Display Encyclopaedia of Life link?',
    'link_title' => 'Encyclopaedia of Life link',
    'link_description' => 'The link to Encyclopaedia of Life without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'Encyclopaedia of Life text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[16] = array(
    'form' => 'jstor',
    'form_title' => 'JSTOR Plant Science',
    'check_title' => 'Display JSTOR Plant Science link?',
    'link_title' => 'JSTOR Plant Science link',
    'link_description' => 'The link to JSTOR Plant Science without the taxon name.',
    'concat_default_value' => ' ',
    'text_title' => 'JSTOR Plant Science text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[17] = array(
    'form' => 'epic',
    'form_title' => 'ePIC',
    'check_title' => 'Display ePIC link?',
    'link_title' => 'ePIC link',
    'link_description' => 'The link to ePIC without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'ePIC text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );
  $ext_links[18] = array(
    'form' => 'fairchild',
    'form_title' => 'Fairchild Guide To Palms',
    'check_title' => 'Display Fairchild Guide To Palms link?',
    'link_title' => 'Fairchild Guide To Palms link',
    'link_description' => 'The link to Fairchild Guide To Palms without the taxon name.',
    'concat_default_value' => '+',
    'text_title' => 'Fairchild Guide To Palms text',
    'text_description' => 'The text of the link that is displayed..',
    'category' => 'Category',
  );


  for ($i = 0; $i < sizeof($ext_links); $i++) {
    $form[$ext_links[$i]['form']] = array(
      '#type' => 'fieldset',
      '#title' => t('@title', array('@title' => $ext_links[$i]['form_title'])),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form[$ext_links[$i]['form']]['ext_links_' . $ext_links[$i]['form'] . '_check'] = array(
      '#type' => 'checkbox',
      '#title' => t('@title', array('@title' => $ext_links[$i]['check_title'])),
      '#default_value' => variable_get('ext_links_' . $ext_links[$i]['form'] . '_check', 1),
    );
    $form[$ext_links[$i]['form']]['ext_links_' . $ext_links[$i]['form'] . '_link'] = array(
      '#type' => 'textfield',
      '#title' => t('@title :', array('@title' => $ext_links[$i]['link_title'])),
      '#default_value' => variable_get('ext_links_' . $ext_links[$i]['form'] . '_link', $ext_links_default[$ext_links[$i]['form']]['link_default_value']),
      '#size' => 70,
      '#maxlength' => 255,
      '#description' => t('@description', array('@description' => $ext_links[$i]['link_description'])),
    );
    $form[$ext_links[$i]['form']]['ext_links_' . $ext_links[$i]['form'] . '_concat'] = array(
      '#type' => 'textfield',
      '#title' => t('Concatenate string') . ':',
      '#default_value' => variable_get('ext_links_' . $ext_links[$i]['form'] . '_concat', $ext_links[$i]['concat_default_value']),
      '#size' => 70,
      '#maxlength' => 255,
      '#description' => t('Concatenate string between genus and species'),
    );
    $form[$ext_links[$i]['form']]['ext_links_' . $ext_links[$i]['form'] . '_text'] = array(
      '#type' => 'textfield',
      '#title' => t('@title :', array('@title' => $ext_links[$i]['text_title'])),
      '#default_value' => variable_get('ext_links_' . $ext_links[$i]['form'] . '_text', $ext_links_default[$ext_links[$i]['form']]['text_default_value']),
      '#size' => 70,
      '#maxlength' => 255,
      '#description' => t('@description', array('@description' => $ext_links[$i]['text_description'])),
    );
    $form[$ext_links[$i]['form']]['ext_links_' . $ext_links[$i]['form'] . '_category'] = array(
      '#type' => 'textfield',
      '#title' => t('@title :', array('@title' => $ext_links[$i]['category'])),
      '#default_value' => variable_get('ext_links_' . $ext_links[$i]['form'] . '_category', $ext_links_default[$ext_links[$i]['form']]['category_default_value']),
      '#size' => 70,
      '#maxlength' => 255,
      '#description' => t('@description', array('@description' => $ext_links[$i]['category'])),
    );
  }
  $form['ext_links_options'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable sorted list with headings'),
    '#default_value' => variable_get('ext_links_options', 0),
    '#prefix' => "<div class = \"sorted_list_option\"",
    '#suffix' => "</div>",
  );
  // @WA: D7 form api does not support reset buttons,
  // so to mimic the D5 reset button we add one like this.
  $form['actions']['reset'] = array(
    '#markup' => '<input id="reset" type="reset" class="form-submit" value="' . t('Reset to defaults') . '" />',
    '#weight' => 1000,
  );

  return system_settings_form($form);
} // function ext_links_admin()


/**
 * Implements hook_menu().
 */
function ext_links_menu() {
  $items = array();

  $items['admin/config/cdm_dataportal/extlinks'] = array(
    'title' => 'External links',
    'description' => 'Description of your External links.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ext_links_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'weight' =>30,
  );

  return $items;
} /* function ext_links_menu() */

/**
 * Returns the genus and the first epithet from the object taxon.
 */
function getSpeciesName($taxon) {
  $speciesName = array();
  $i = 0;
  while (isset($taxon->name->taggedName[$i]) && !isset($speciesName['species'])) {
    if ($taxon->name->taggedName[$i]->type == "name") {
      if (!isset($speciesName['genus'])) {
        $speciesName['genus'] = $taxon->name->taggedName[$i]->text;
      }
      else {
        $speciesName['species'] = $taxon->name->taggedName[$i]->text;
      }
    }
    $i++;
  }
  return $speciesName;
}

/**
 * Implements hook_block_info().
 */
function ext_links_block_info() {
  if (TRUE) {
    $block[0]["info"] = t("External Taxon Links");
    return $block;
  }
}

/**
 * Implements hook_block_view().
 */
function ext_links_block_view($delta) {
  // TODO Rename block deltas (e.g. '0') to readable strings.
  switch ($delta) {
    case '0':
      $block['subject'] = 'External links';

      $uuid = get_current_taxon_uuid();
      if ($uuid) {
        $taxon = cdm_ws_get(CDM_WS_PORTAL_TAXON, $uuid);

        // $taxon->titleCache;
        // var_export()
        if (!empty($taxon)) {
          drupal_add_js(drupal_get_path('module', 'ext_links') . '/ext_links.js');
          $speciesName = getSpeciesName($taxon);

          $genus = $taxon->name->taggedName[0]->text;
          $species = $taxon->name->taggedName[1]->text;
          $block_content = '';
          $listOption = variable_get("ext_links_options", 0);
          if (isset($listOption)) {
            $block['content'] = theme('ext_links_list_grouped', array('speciesName' => $speciesName, 'genus' => $genus, 'species' => $species));
          }
          else {
            $block['content'] = theme('ext_links_list_plain', array('speciesName' => $speciesName, 'genus' => $genus, 'species' => $species ));
          }

          // if(variable_get('ext_links_gbif_check', TRUE)) {
          // $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_gbif_link', $ext_links_default[gbif][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_gbif_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_gbif_text', $ext_links_default[gbif][text_default_value]).'</a><br />';
          /*
           $block_content .=
           /* TODO
           Please manually fix the parameters on the l() or url() function on the next line.
           Typically, this was not changed because of a function call inside an array call like
           array('title' => t('View user profile.')).
           l(variable_get('ext_links_gbif_text', $ext_links_default[gbif][text_default_value]),
           'JavaScript:popupExternalLinks('.variable_get('ext_links_gbif_link', $ext_links_default[gbif][link_default_value]).$speciesName[genus].variable_get('ext_links_gbif_concat', ' ').$speciesName[species],
           array(), null, null, true);
           */
          /*}
           if(variable_get('ext_links_biocase_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_biocase_link', $ext_links_default[biocase][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_biocase_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_biocase_text', $ext_links_default[biocase][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_nybg_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_nybg_link', $ext_links_default[nybg][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_nybg_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_nybg_text', $ext_links_default[nybg][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_tropicos_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_tropicos_link', $ext_links_default[tropicos][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_tropicos_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_tropicos_text', $ext_links_default[tropicos][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_ncbi_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_ncbi_link', $ext_links_default[ncbi][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_ncbi_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_ncbi_text', $ext_links_default[ncbi][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_google_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_google_link', $ext_links_default[google][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_google_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_google_text', $ext_links_default[google][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_flickr_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_flickr_link', $ext_links_default[flickr][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_flickr_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_flickr_text', $ext_links_default[flickr][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_scholar_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_scholar_link', $ext_links_default[scholar][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_scholar_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_scholar_text', $ext_links_default[scholar][text_default_value]).'</a><br />';
           }
           if(variable_get('ext_links_bhl_check', 1)) {
           $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_bhl_link', $ext_links_default[bhl][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_bhl_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_bhl_text', $ext_links_default[bhl][text_default_value]).'</a><br />';
           }

           $block['content'] = $block_content;
           $block['content'] = theme('ext_links_list_plain');

           }

           }*/
          // if taxon
        }
      }
      // If path.
      return $block;
  } /* switch */

}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function theme_ext_links_list_grouped($variables) {
  // comment @WA: perhaps this function could be merged with ext_list_plain
  // into one function?
  $speciesName = $variables['speciesName'];
  if(!isset($speciesName['genus'])) {
    $speciesName['genus'] = '';
  }
  if(!isset($speciesName['species'])) {
    $speciesName['species'] = '';
  }
  $genus = $variables['genus'];
  $species = $variables['species'];
  $block_content = '';
  $categories = NULL;
  $ext_links_default = ext_links_get_default();


  /*
  foreach ($ext_links_default as $ext_link) {

   //$block_content .= $ext_link['ext_links_bhl_category'];
   $category[] = variable_get('ext_links_bhl_category', $ext_links_default[][text_default_value]);
   $block_content .= variable_get('ext_links_bhl_category', $ext_links_default[][text_default_value]);
   }
   */

  // Images section.
  if (variable_get('ext_links_google_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_google_category', $ext_links_default['google']['category_default_value']);
    $categories['google']['title'] = variable_get('ext_links_google_category', $ext_links_default['google']['category_default_value']);
    $categories['google']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_google_link', $ext_links_default['google']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_google_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_google_text', $ext_links_default['google']['text_default_value']) . '</a><br />';

  }
  if (variable_get('ext_links_flickr_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_flickr_category', $ext_links_default['flickr']['category_default_value']);
    $categories['flickr']['title'] = variable_get('ext_links_flickr_category', $ext_links_default['flickr']['category_default_value']);
    $categories['flickr']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_flickr_link', $ext_links_default['flickr']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_flickr_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_flickr_text', $ext_links_default['flickr']['text_default_value']) . '</a><br />';
  }

  // Specimen/occurences section.
  if (variable_get('ext_links_gbif_check', TRUE)) {
    $categoryTitles[] = variable_get('ext_links_gbif_category', $ext_links_default['gbif']['category_default_value']);
    $categories['gbif']['title'] = variable_get('ext_links_gbif_category', $ext_links_default['gbif']['category_default_value']);
    $categories['gbif']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_gbif_link', $ext_links_default['gbif']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_gbif_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_gbif_text', $ext_links_default['gbif']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_biocase_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_biocase_category', $ext_links_default['biocase']['category_default_value']);
    $categories['biocase']['title'] = variable_get('ext_links_biocase_category', $ext_links_default['biocase']['category_default_value']);
    $categories['biocase']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_biocase_link', $ext_links_default['biocase']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_biocase_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_biocase_text', $ext_links_default['biocase']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_nybg_check', 1)) {
    $query = '';
    $genusQuery = '';
    $speciesQuery = '';
    if ($speciesName['genus'] != NULL) {
      $query .= 'DetFiledAsGenusLocal+%3D+\%27'. $speciesName['genus']. '\%27';
    }
    if ($speciesName['species'] != NULL) {
      $query .= variable_get('ext_links_nybg_concat', '+AND+'). 'DetFiledAsSpeciesLocal+%3D+\%27'. $speciesName['species'] . '\%27';
    }
    $categoryTitles[] = variable_get('ext_links_nybg_category', $ext_links_default['nybg']['category_default_value']);
    $categories['nybg']['title'] = variable_get('ext_links_nybg_category', $ext_links_default['nybg']['category_default_value']);
    $categories['nybg']['content'] = '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_nybg_link', $ext_links_default['nybg']['link_default_value']).$query.'\')">'.variable_get('ext_links_nybg_text', $ext_links_default['nybg']['text_default_value']).'</a><br />';
  }
  if (variable_get('ext_links_tropicos_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_tropicos_category', $ext_links_default['tropicos']['category_default_value']);
    $categories['tropicos']['title'] = variable_get('ext_links_tropicos_category', $ext_links_default['tropicos']['category_default_value']);
    $categories['tropicos']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tropicos_link', $ext_links_default['tropicos']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tropicos_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tropicos_text', $ext_links_default['tropicos']['text_default_value']) . '</a><br />';
  }

  // Literature.
  if (variable_get('ext_links_scholar_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_scholar_category', $ext_links_default['scholar']['category_default_value']);
    $categories['scholar']['title'] = variable_get('ext_links_scholar_category', $ext_links_default['scholar']['category_default_value']);
    $categories['scholar']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_scholar_link', $ext_links_default['scholar']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_scholar_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_scholar_text', $ext_links_default['scholar']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_bhl_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_bhl_category', $ext_links_default['bhl']['category_default_value']);
    $categories['bhl']['title'] = variable_get('ext_links_bhl_category', $ext_links_default['bhl']['category_default_value']);
    $categories['bhl']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_bhl_link', $ext_links_default['bhl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_bhl_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_bhl_text', $ext_links_default['bhl']['text_default_value']) . '</a><br />';
  }

  // Molecular resources.
  if (variable_get('ext_links_ncbi_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_ncbi_category', $ext_links_default['ncbi']['category_default_value']);
    $categories['ncbi']['title'] = variable_get('ext_links_ncbi_category', $ext_links_default['ncbi']['category_default_value']);
    $categories['ncbi']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ncbi_link', $ext_links_default['ncbi']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_ncbi_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_ncbi_text', $ext_links_default['ncbi']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_arkive_check', 1)) {
    $postURL = '&output=xml_no_dtd&client=arkive-images&site=arkive-images&ie=utf8&oe=utf8&num=20&proxystylesheet=tng-search&filter=0&getfields=*';
    $categoryTitles[] = variable_get('ext_links_arkive_category', $ext_links_default['arkive']['category_default_value']);
    $categories['arkive']['title'] = variable_get('ext_links_arkive_category', $ext_links_default['arkive']['category_default_value']);
    $categories['arkive']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_arkive_link', $ext_links_default['arkive']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_arkive_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_arkive_text', $ext_links_default['arkive']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_herbcat_check', 1)) {
    $postURL = '&x=11&y=13&homePageSearchOption=scientific_name&nameOfSearchPage=home_page';
    $categoryTitles[] = variable_get('ext_links_herbcat_category', $ext_links_default['herbcat']['category_default_value']);
    $categories['herbcat']['title'] = variable_get('ext_links_herbcat_category', $ext_links_default['herbcat']['category_default_value']);
    $categories['herbcat']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_herbcat_link', $ext_links_default['herbcat']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_herbcat_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_herbcat_text', $ext_links_default['herbcat']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_iucn_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_iucn_category', $ext_links_default['iucn']['category_default_value']);
    $categories['iucn']['title'] = variable_get('ext_links_iucn_category', $ext_links_default['iucn']['category_default_value']);
    $categories['iucn']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_iucn_link', $ext_links_default['iucn']['link_default_value']) . '\')">' . variable_get('ext_links_iucn_text', $ext_links_default['iucn']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_ipni_check', 1)) {
    $genusQuery = 'find_genus=' . $speciesName['genus'];
    $speciesQuery = 'find_species=' . $speciesName['species'];
    $categoryTitles[] = variable_get('ext_links_ipni_category', $ext_links_default['ipni']['category_default_value']);
    $categories['ipni']['title'] = variable_get('ext_links_ipni_category', $ext_links_default['ipni']['category_default_value']);
    $categories['ipni']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ipni_link', $ext_links_default['ipni']['link_default_value']) . $genusQuery . variable_get('ext_links_ipni_concat', '&') . $speciesQuery . '\')">' . variable_get('ext_links_ipni_text', $ext_links_default['ipni']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_wcsp_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_wcsp_category', $ext_links_default['wcsp']['category_default_value']);
    $categories['wcsp']['title'] = variable_get('ext_links_wcsp_category', $ext_links_default['wcsp']['category_default_value']);
    $categories['wcsp']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_wcsp_link', $ext_links_default['wcsp']['link_default_value']) . '\')">' . variable_get('ext_links_wcsp_text', $ext_links_default['wcsp']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_tpl_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_tpl_category', $ext_links_default['tpl']['category_default_value']);
    $categories['tpl']['title'] = variable_get('ext_links_tpl_category', $ext_links_default['tpl']['category_default_value']);
    $categories['tpl']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tpl_link', $ext_links_default['tpl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tpl_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tpl_text', $ext_links_default['tpl']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_eol_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_eol_category', $ext_links_default['eol']['category_default_value']);
    $categories['eol']['title'] = variable_get('ext_links_eol_category', $ext_links_default['eol']['category_default_value']);
    $categories['eol']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_eol_link', $ext_links_default['eol']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_eol_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_eol_text', $ext_links_default['eol']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_jstor_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_jstor_category', $ext_links_default['jstor']['category_default_value']);
    $categories['jstor']['title'] = variable_get('ext_links_jstor_category', $ext_links_default['jstor']['category_default_value']);
    $categories['jstor']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_jstor_link', $ext_links_default['jstor']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_jstor_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_jstor_text', $ext_links_default['jstor']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_epic_check', 1)) {
    $postURL = '&searchAll=true&categories=names&categories=bibl&categories=colln&categories=taxon&categories=flora&Submit.x=0&Submit.y=0';
    $categoryTitles[] = variable_get('ext_links_epic_category', $ext_links_default['epic']['category_default_value']);
    $categories['epic']['title'] = variable_get('ext_links_epic_category', $ext_links_default['epic']['category_default_value']);
    $categories['epic']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_epic_link', $ext_links_default['epic']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_epic_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_epic_text', $ext_links_default['epic']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_fairchild_check', 1)) {
    $categoryTitles[] = variable_get('ext_links_fairchild_category', $ext_links_default['fairchild']['category_default_value']);
    $categories['fairchild']['title'] = variable_get('ext_links_fairchild_category', $ext_links_default['fairchild']['category_default_value']);
    $categories['fairchild']['content'] = '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_fairchild_link', $ext_links_default['fairchild']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_fairchild_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_fairchild_text', $ext_links_default['fairchild']['text_default_value']) . '</a><br />';

  }

  $categoryTitles = array_unique($categoryTitles);
  foreach ($categoryTitles as $categoryTitle) {
    // $block_content .= "specName" . $speciesName;
    $block_content .= "<div class=\"category\"><h5>" . $categoryTitle . "</h5>";
    foreach ($categories as $category) {
      if ($category['title'] == $categoryTitle) {
        $block_content .= $category['content'];
      }
    }
    $block_content .= "</div>";
  }


  return $block_content;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function theme_ext_links_list_plain($variables) {
  $speciesName = $variables['speciesName'];
  if (!isset($speciesName['genus'])) {
    $speciesName['genus'] = '';
  }
  if (!isset($speciesName['species'])) {
    $speciesName['species'] = '';
  }
  $genus = $variables['genus'];
  $species = $variables['species'];
  $ext_links_default = ext_links_get_default();
  $block_content = '';
  if (variable_get('ext_links_gbif_check', TRUE)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_gbif_link', $ext_links_default['gbif']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_gbif_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_gbif_text', $ext_links_default['gbif']['text_default_value']) . '</a><br />';
    /*
     $block_content .= /* TODO
     Please manually fix the parameters on the l() or url() function on the next line.
     Typically, this was not changed because of a function call inside an array call like
     array('title' => t('View user profile.')).*/
    /*
     l(variable_get('ext_links_gbif_text', $ext_links_default[gbif][text_default_value]),
     'JavaScript:popupExternalLinks('.variable_get('ext_links_gbif_link', $ext_links_default[gbif][link_default_value]).$speciesName[genus].variable_get('ext_links_gbif_concat', ' ').$speciesName[species],
     array(), null, null, true);
     */
  }
  if (variable_get('ext_links_biocase_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_biocase_link', $ext_links_default['biocase']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_biocase_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_biocase_text', $ext_links_default['biocase']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_nybg_check', 1)) {
    // $block_content .= '<a href="JavaScript:popupExternalLinks(\''.variable_get('ext_links_nybg_link', $ext_links_default[nybg][link_default_value]).str_replace('"','%22',$speciesName[genus]).variable_get('ext_links_nybg_concat', ' ').str_replace('"','%22',$speciesName[species]).'\')">'.variable_get('ext_links_nybg_text', $ext_links_default[nybg][text_default_value]).'</a><br />';
    $genusQuery = '';
    $speciesQuery = '';
    if ($speciesName['genus'] != NULL) {
      $genusQuery = 'DetFiledAsGenusLocal+%3D+\%27' . $speciesName['genus'] . '\%27';
    }
    if ($speciesName['species'] != NULL) {
      $speciesQuery = 'DetFiledAsSpeciesLocal+%3D+\%27' . $speciesName['species'] . '\%27';
    }
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_nybg_link', $ext_links_default['nybg']['link_default_value']) . $genusQuery . variable_get('ext_links_nybg_concat', '+AND+') . $speciesQuery . '\')">' . variable_get('ext_links_nybg_text', $ext_links_default['nybg']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_tropicos_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tropicos_link', $ext_links_default['tropicos']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tropicos_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tropicos_text', $ext_links_default['tropicos']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_ncbi_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ncbi_link', $ext_links_default['ncbi']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_ncbi_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_ncbi_text', $ext_links_default['ncbi']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_google_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_google_link', $ext_links_default['google']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_google_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_google_text', $ext_links_default['google']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_flickr_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_flickr_link', $ext_links_default['flickr']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_flickr_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_flickr_text', $ext_links_default['flickr']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_scholar_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_scholar_link', $ext_links_default['scholar']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_scholar_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_scholar_text', $ext_links_default['scholar']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_bhl_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_bhl_link', $ext_links_default['bhl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_bhl_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_bhl_text', $ext_links_default['bhl']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_fairchild_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_fairchild_link', $ext_links_default['fairchild']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_fairchild_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_fairchild_text', $ext_links_default['fairchild']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_arkive_check', 1)) {
    $postURL = '&output=xml_no_dtd&client=arkive-images&site=arkive-images&ie=utf8&oe=utf8&num=20&proxystylesheet=tng-search&filter=0&getfields=*';
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_arkive_link', $ext_links_default['arkive']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_arkive_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_arkive_text', $ext_links_default['arkive']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_herbcat_check', 1)) {
    $postURL = '&x=11&y=13&homePageSearchOption=scientific_name&nameOfSearchPage=home_page';
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_herbcat_link', $ext_links_default['herbcat']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_herbcat_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_herbcat_text', $ext_links_default['herbcat']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_iucn_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_iucn_link', $ext_links_default['iucn']['link_default_value']) . '\')">' . variable_get('ext_links_iucn_text', $ext_links_default['iucn']['text_default_value']) . '</a><br />';

  }
  if (variable_get('ext_links_ipni_check', 1)) {
    $genusQuery = 'find_genus=' . $speciesName['genus'];
    $speciesQuery = 'find_species=' . $speciesName['species'];
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_ipni_link', $ext_links_default['ipni']['link_default_value']) . $genusQuery . variable_get('ext_links_ipni_concat', '&') . $speciesQuery . '\')">' . variable_get('ext_links_ipni_text', $ext_links_default['ipni']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_wcsp_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_wcsp_link', $ext_links_default['wcsp']['link_default_value']) . '\')">' . variable_get('ext_links_wcsp_text', $ext_links_default['wcsp']['text_default_value']) . '</a><br />';

  }
  if (variable_get('ext_links_tpl_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_tpl_link', $ext_links_default['tpl']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_tpl_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_tpl_text', $ext_links_default['tpl']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_eol_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_eol_link', $ext_links_default['eol']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_eol_concat', '+') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_eol_text', $ext_links_default['eol']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_jstor_check', 1)) {
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_jstor_link', $ext_links_default['jstor']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_jstor_concat', ' ') . str_replace('"', '%22', $speciesName['species']) . '\')">' . variable_get('ext_links_jstor_text', $ext_links_default['jstor']['text_default_value']) . '</a><br />';
  }
  if (variable_get('ext_links_epic_check', 1)) {
    $postURL = '&searchAll=true&categories=names&categories=bibl&categories=colln&categories=taxon&categories=flora&Submit.x=0&Submit.y=0';
    $block_content .= '<a href="JavaScript:popupExternalLinks(\'' . variable_get('ext_links_epic_link', $ext_links_default['epic']['link_default_value']) . str_replace('"', '%22', $speciesName['genus']) . variable_get('ext_links_epic_concat', '+') . str_replace('"', '%22', $speciesName['species']) . $postURL . '\')">' . variable_get('ext_links_epic_text', $ext_links_default['epic']['text_default_value']) . '</a><br />';
  }

  return $block_content;
}

// Include the admin form if we really want it to use.
/*
if (arg(0) === 'admin' AND arg(1) === 'user' AND arg(2) === 'ext_link') {
  module_load_include('inc', 'ext_links', 'xt_link_admin');
}
*/

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function ext_links_theme() {
  return array(
    'ext_links_list_grouped' => array('variables' => array(
      'speciesName' => NULL,
      'genus' => NULL,
      'species' => NULL,
      )),
    'ext_links_list_plain' => array('variables' => array(
      'speciesName' => NULL,
      'genus' => NULL,
      'species' => NULL,
      )),
  );
}

/**
 * Get the default external links.
 *
 * @return array
 *   Returns an array with default external links values.
 */
function ext_links_get_default() {
  $ext_links_default["gbif"] = array(
    'link_default_value' => 'http://www.gbif.org/species/search?q=',
    'text_default_value' => 'Search GBIF...',
    'category_default_value' => 'Specimens/Occurrences',
  );
  $ext_links_default["biocase"] = array(
    'link_default_value' => 'http://search.biocase.org/edit/search/units/simpleSearch/query1?unitName=',
    'text_default_value' => 'Search BioCASE...',
    'category_default_value' => 'Specimens/Occurrences',
  );
  $ext_links_default["nybg"] = array(
    'link_default_value' => 'http://sweetgum.nybg.org/vh/specimen_list.php?Where=',
    'text_default_value' => 'Search NYBG...',
    'category_default_value' => 'Specimens/Occurrences',
  );
  $ext_links_default["tropicos"] = array(
    'link_default_value' => 'http://www.tropicos.org/NameSearch.aspx?name=',
    'text_default_value' => 'Search Tropicos...',
    'category_default_value' => 'Specimens/Occurrences',
  );
  $ext_links_default["ncbi"] = array(
    'link_default_value' => 'http://www.ncbi.nlm.nih.gov/gquery/gquery.fcgi?term=',
    'text_default_value' => 'Search NCBI...',
    'category_default_value' => 'Molecular Resources',
  );
  $ext_links_default["google"] = array(
    'link_default_value' => 'http://images.google.com/images?q=',
    'text_default_value' => 'Search Google Images...',
    'category_default_value' => 'Images',
  );
  $ext_links_default["flickr"] = array(
    'link_default_value' => 'http://www.flickr.com/search/?w=all&q=',
    'text_default_value' => 'Search flickr...',
    'category_default_value' => 'Images',
  );
  $ext_links_default["scholar"] = array(
    'link_default_value' => 'http://scholar.google.de/scholar?hl=de&btnG=Suche&lr=&as_ylo=&as_vis=0&q=',
    'text_default_value' => 'Search Google scholar...',
    'category_default_value' => 'Literature',
  );
  $ext_links_default["bhl"] = array(
    'link_default_value' => 'http://www.biodiversitylibrary.org/Search.aspx?searchCat=&searchTerm=',
    'text_default_value' => 'Search BHL...',
    'category_default_value' => 'Literature',
  );
  $ext_links_default["arkive"] = array(
    'link_default_value' => 'http://www.arkive.org/search.html?q=',
    'text_default_value' => 'Search ARKive...',
    'category_default_value' => 'Images',
  );
  $ext_links_default["herbcat"] = array(
    'link_default_value' => 'http://apps.kew.org/herbcat/getHomePageResults.do?homePageSearchText=',
    'text_default_value' => 'Search Kew Herbarium Catalogue...',
    'category_default_value' => 'Specimens/Occurrences',
  );
  $ext_links_default["iucn"] = array(
    'link_default_value' => 'http://www.iucnredlist.org/',
    'text_default_value' => 'Go to IUCN Red List...',
    'category_default_value' => 'Conservation',
  );
  $ext_links_default["ipni"] = array(
    'link_default_value' => 'http://www.ipni.org/ipni/advPlantNameSearch.do?',
    'text_default_value' => 'Search IPNI...',
    'category_default_value' => 'Classification',
  );
  $ext_links_default["wcsp"] = array(
    'link_default_value' => 'http://apps.kew.org/wcsp/prepareChecklist.do?checklist=monocots%40%40150290520121019541',
    'text_default_value' => 'Search World Checklist Monocots...',
    'category_default_value' => 'Classification',
  );
  $ext_links_default["tpl"] = array(
    'link_default_value' => 'http://www.theplantlist.org/tpl/search?q=',
    'text_default_value' => 'Search The Plant List...',
    'category_default_value' => 'Classification',
  );
  $ext_links_default["eol"] = array(
    'link_default_value' => 'http://eol.org/search/?q=',
    'text_default_value' => 'Search Encyclopaedia of Life...',
    'category_default_value' => 'General',
  );
  $ext_links_default["jstor"] = array(
    'link_default_value' => 'http://plants.jstor.org/search?searchText=',
    'text_default_value' => 'Search JSTOR Plant Science...',
    'category_default_value' => 'General',
  );
  $ext_links_default["epic"] = array(
    'link_default_value' => 'http://epic.kew.org/searchepic/summaryquery.do?scientificName=',
    'text_default_value' => 'Search ePIC...',
    'category_default_value' => 'General',
  );
  $ext_links_default["fairchild"] = array(
    'link_default_value' => 'http://palmguide.org/palmsearch.php?query=',
    'text_default_value' => 'Search Fairchild Guide To Palms...',
    'category_default_value' => 'Specimens/Occurrences',
  );
  return $ext_links_default;
}
